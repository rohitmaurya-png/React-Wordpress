{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ruturaj\\\\Downloads\\\\woo-next-master\\\\src\\\\components\\\\checkout\\\\CheckoutForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useContext, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport YourOrder from \"./YourOrder\";\nimport PaymentModes from \"./PaymentModes\";\nimport { AppContext } from \"../context/AppContext\";\nimport validateAndSanitizeCheckoutForm from '../../validator/checkout';\nimport { getFormattedCart, createCheckoutData } from \"../../functions\";\nimport OrderSuccess from \"./OrderSuccess\";\nimport GET_CART from \"../../queries/get-cart\";\nimport CHECKOUT_MUTATION from \"../../mutations/checkout\";\nimport Address from \"./Address\";\nimport { handleBillingDifferentThanShipping, handleCreateAccount, setStatesForCountry } from \"../../utils/checkout\";\nimport CheckboxField from \"./form-elements/CheckboxField\"; // Use this for testing purposes, so you dont have to fill the checkout form over an over again.\n// const defaultCustomerInfo = {\n// \tfirstName: 'Imran',\n// \tlastName: 'Sayed',\n// \taddress1: '123 Abc farm',\n// \taddress2: 'Hill Road',\n// \tcity: 'Mumbai',\n// \tcountry: 'IN',\n// \tstate: 'Maharastra',\n// \tpostcode: '221029',\n// \temail: 'codeytek.academy@gmail.com',\n// \tphone: '9883778278',\n// \tcompany: 'The Company',\n// \terrors: null\n// }\n\nconst defaultCustomerInfo = {\n  firstName: '',\n  lastName: '',\n  address1: '',\n  address2: '',\n  city: '',\n  country: '',\n  state: '',\n  postcode: '',\n  email: '',\n  phone: '',\n  company: '',\n  errors: null\n};\n\nconst CheckoutForm = ({\n  countriesData\n}) => {\n  const {\n    billingCountries,\n    shippingCountries\n  } = countriesData || {};\n  const initialState = {\n    billing: _objectSpread({}, defaultCustomerInfo),\n    shipping: _objectSpread({}, defaultCustomerInfo),\n    createAccount: false,\n    orderNotes: '',\n    billingDifferentThanShipping: false,\n    paymentMethod: 'cod'\n  };\n  const {\n    0: cart,\n    1: setCart\n  } = useContext(AppContext);\n  const {\n    0: input,\n    1: setInput\n  } = useState(initialState);\n  const {\n    0: orderData,\n    1: setOrderData\n  } = useState(null);\n  const {\n    0: requestError,\n    1: setRequestError\n  } = useState(null);\n  const {\n    0: theShippingStates,\n    1: setTheShippingStates\n  } = useState([]);\n  const {\n    0: isFetchingShippingStates,\n    1: setIsFetchingShippingStates\n  } = useState(false);\n  const {\n    0: theBillingStates,\n    1: setTheBillingStates\n  } = useState([]);\n  const {\n    0: isFetchingBillingStates,\n    1: setIsFetchingBillingStates\n  } = useState(false); // Get Cart Data.\n\n  const {\n    data\n  } = useQuery(GET_CART, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: () => {\n      // Update cart in the localStorage.\n      const updatedCart = getFormattedCart(data);\n      localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart)); // Update cart data in React Context.\n\n      setCart(updatedCart);\n    }\n  }); // Create New order: Checkout Mutation.\n\n  const [checkout, {\n    data: checkoutResponse,\n    loading: checkoutLoading\n  }] = useMutation(CHECKOUT_MUTATION, {\n    variables: {\n      input: orderData\n    },\n    onError: error => {\n      if (error) {\n        var _error$graphQLErrors$, _error$graphQLErrors, _error$graphQLErrors$2;\n\n        setRequestError((_error$graphQLErrors$ = error === null || error === void 0 ? void 0 : (_error$graphQLErrors = error.graphQLErrors) === null || _error$graphQLErrors === void 0 ? void 0 : (_error$graphQLErrors$2 = _error$graphQLErrors[0]) === null || _error$graphQLErrors$2 === void 0 ? void 0 : _error$graphQLErrors$2.message) !== null && _error$graphQLErrors$ !== void 0 ? _error$graphQLErrors$ : '');\n      }\n    }\n  });\n  /*\n   * Handle form submit.\n   *\n   * @param {Object} event Event Object.\n   *\n   * @return {void}\n   */\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    /**\n     * Validate Billing and Shipping Details\n     *\n     * Note:\n     * 1. If billing is different than shipping address, only then validate billing.\n     * 2. We are passing theBillingStates?.length and theShippingStates?.length, so that\n     * the respective states should only be mandatory, if a country has states.\n     */\n\n    const billingValidationResult = input !== null && input !== void 0 && input.billingDifferentThanShipping ? validateAndSanitizeCheckoutForm(input === null || input === void 0 ? void 0 : input.billing, theBillingStates === null || theBillingStates === void 0 ? void 0 : theBillingStates.length) : {\n      errors: null,\n      isValid: true\n    };\n    const shippingValidationResult = validateAndSanitizeCheckoutForm(input === null || input === void 0 ? void 0 : input.shipping, theShippingStates === null || theShippingStates === void 0 ? void 0 : theShippingStates.length);\n\n    if (!shippingValidationResult.isValid || !billingValidationResult.isValid) {\n      setInput(_objectSpread(_objectSpread({}, input), {}, {\n        billing: _objectSpread(_objectSpread({}, input.billing), {}, {\n          errors: billingValidationResult.errors\n        }),\n        shipping: _objectSpread(_objectSpread({}, input.shipping), {}, {\n          errors: shippingValidationResult.errors\n        })\n      }));\n      return;\n    }\n\n    const checkOutData = createCheckoutData(input);\n    setRequestError(null);\n    /**\n     *  When order data is set, checkout mutation will automatically be called,\n     *  because 'orderData' is added in useEffect as a dependency.\n     */\n\n    setOrderData(checkOutData);\n  };\n  /*\n   * Handle onchange input.\n   *\n   * @param {Object} event Event Object.\n   * @param {bool} isShipping If this is false it means it is billing.\n   * @param {bool} isBillingOrShipping If this is false means its standard input and not billing or shipping.\n   *\n   * @return {void}\n   */\n\n\n  const handleOnChange = async (event, isShipping = false, isBillingOrShipping = false) => {\n    const {\n      target\n    } = event || {};\n\n    if ('createAccount' === target.name) {\n      handleCreateAccount(input, setInput, target);\n    } else if ('billingDifferentThanShipping' === target.name) {\n      handleBillingDifferentThanShipping(input, setInput, target);\n    } else if (isBillingOrShipping) {\n      if (isShipping) {\n        await handleShippingChange(target);\n      } else {\n        await handleBillingChange(target);\n      }\n    } else {\n      const newState = _objectSpread(_objectSpread({}, input), {}, {\n        [target.name]: target.value\n      });\n\n      setInput(newState);\n    }\n  };\n\n  const handleShippingChange = async target => {\n    const newState = _objectSpread(_objectSpread({}, input), {}, {\n      shipping: _objectSpread(_objectSpread({}, input === null || input === void 0 ? void 0 : input.shipping), {}, {\n        [target.name]: target.value\n      })\n    });\n\n    setInput(newState);\n    await setStatesForCountry(target, setTheShippingStates, setIsFetchingShippingStates);\n  };\n\n  const handleBillingChange = async target => {\n    const newState = _objectSpread(_objectSpread({}, input), {}, {\n      billing: _objectSpread(_objectSpread({}, input === null || input === void 0 ? void 0 : input.billing), {}, {\n        [target.name]: target.value\n      })\n    });\n\n    setInput(newState);\n    await setStatesForCountry(target, setTheBillingStates, setIsFetchingBillingStates);\n  };\n\n  useEffect(async () => {\n    if (null !== orderData) {\n      // Call the checkout mutation when the value for orderData changes/updates.\n      await checkout();\n    }\n  }, [orderData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cart ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"woo-next-checkout-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"billing-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-medium mb-4\",\n              children: \"Shipping Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Address, {\n              states: theShippingStates,\n              countries: shippingCountries,\n              input: input === null || input === void 0 ? void 0 : input.shipping,\n              handleOnChange: event => handleOnChange(event, true, true),\n              isFetchingStates: isFetchingShippingStates,\n              isShipping: true,\n              isBillingOrShipping: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CheckboxField, {\n              name: \"billingDifferentThanShipping\",\n              type: \"checkbox\",\n              checked: input === null || input === void 0 ? void 0 : input.billingDifferentThanShipping,\n              handleOnChange: handleOnChange,\n              label: \"Billing different than shipping\",\n              containerClassNames: \"mb-4 pt-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), input !== null && input !== void 0 && input.billingDifferentThanShipping ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"billing-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-medium mb-4\",\n              children: \"Billing Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Address, {\n              states: theBillingStates,\n              countries: billingCountries,\n              input: input === null || input === void 0 ? void 0 : input.billing,\n              handleOnChange: event => handleOnChange(event, false, true),\n              isFetchingStates: isFetchingBillingStates,\n              isShipping: false,\n              isBillingOrShipping: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"your-orders\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-medium mb-4\",\n            children: \"Your Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YourOrder, {\n            cart: cart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PaymentModes, {\n            input: input,\n            handleOnChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"woo-next-place-order-btn-wrap mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-purple-600 text-white px-5 py-3 rounded-sm w-auto xl:w-full\",\n              type: \"submit\",\n              children: \"Place Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), checkoutLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Processing Order...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 49\n          }, this), requestError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error : \", requestError, \" :( Please try again\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this) : '', /*#__PURE__*/_jsxDEV(OrderSuccess, {\n      response: checkoutResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default CheckoutForm;","map":{"version":3,"sources":["C:/Users/Ruturaj/Downloads/woo-next-master/src/components/checkout/CheckoutForm.js"],"names":["useState","useContext","useEffect","useMutation","useQuery","YourOrder","PaymentModes","AppContext","validateAndSanitizeCheckoutForm","getFormattedCart","createCheckoutData","OrderSuccess","GET_CART","CHECKOUT_MUTATION","Address","handleBillingDifferentThanShipping","handleCreateAccount","setStatesForCountry","CheckboxField","defaultCustomerInfo","firstName","lastName","address1","address2","city","country","state","postcode","email","phone","company","errors","CheckoutForm","countriesData","billingCountries","shippingCountries","initialState","billing","shipping","createAccount","orderNotes","billingDifferentThanShipping","paymentMethod","cart","setCart","input","setInput","orderData","setOrderData","requestError","setRequestError","theShippingStates","setTheShippingStates","isFetchingShippingStates","setIsFetchingShippingStates","theBillingStates","setTheBillingStates","isFetchingBillingStates","setIsFetchingBillingStates","data","notifyOnNetworkStatusChange","onCompleted","updatedCart","localStorage","setItem","JSON","stringify","checkout","checkoutResponse","loading","checkoutLoading","variables","onError","error","graphQLErrors","message","handleFormSubmit","event","preventDefault","billingValidationResult","length","isValid","shippingValidationResult","checkOutData","handleOnChange","isShipping","isBillingOrShipping","target","name","handleShippingChange","handleBillingChange","newState","value"],"mappings":"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","sourcesContent":["import {useState, useContext, useEffect} from 'react';\nimport {useMutation, useQuery} from '@apollo/client';\n\nimport YourOrder from \"./YourOrder\";\nimport PaymentModes from \"./PaymentModes\";\nimport {AppContext} from \"../context/AppContext\";\nimport validateAndSanitizeCheckoutForm from '../../validator/checkout';\nimport {getFormattedCart, createCheckoutData} from \"../../functions\";\nimport OrderSuccess from \"./OrderSuccess\";\nimport GET_CART from \"../../queries/get-cart\";\nimport CHECKOUT_MUTATION from \"../../mutations/checkout\";\nimport Address from \"./Address\";\nimport {\n    handleBillingDifferentThanShipping,\n    handleCreateAccount,\n    setStatesForCountry\n} from \"../../utils/checkout\";\nimport CheckboxField from \"./form-elements/CheckboxField\";\n\n// Use this for testing purposes, so you dont have to fill the checkout form over an over again.\n// const defaultCustomerInfo = {\n// \tfirstName: 'Imran',\n// \tlastName: 'Sayed',\n// \taddress1: '123 Abc farm',\n// \taddress2: 'Hill Road',\n// \tcity: 'Mumbai',\n// \tcountry: 'IN',\n// \tstate: 'Maharastra',\n// \tpostcode: '221029',\n// \temail: 'codeytek.academy@gmail.com',\n// \tphone: '9883778278',\n// \tcompany: 'The Company',\n// \terrors: null\n// }\n\nconst defaultCustomerInfo = {\n    firstName: '',\n    lastName: '',\n    address1: '',\n    address2: '',\n    city: '',\n    country: '',\n    state: '',\n    postcode: '',\n    email: '',\n    phone: '',\n    company: '',\n    errors: null\n}\n\nconst CheckoutForm = ({countriesData}) => {\n\n    const {billingCountries, shippingCountries} = countriesData || {}\n\n    const initialState = {\n        billing: {\n            ...defaultCustomerInfo,\n        },\n        shipping: {\n            ...defaultCustomerInfo\n        },\n        createAccount: false,\n        orderNotes: '',\n        billingDifferentThanShipping: false,\n        paymentMethod: 'cod',\n    };\n\n    const [cart, setCart] = useContext(AppContext);\n    const [input, setInput] = useState(initialState);\n    const [orderData, setOrderData] = useState(null);\n    const [requestError, setRequestError] = useState(null);\n    const [theShippingStates, setTheShippingStates] = useState([]);\n    const [isFetchingShippingStates, setIsFetchingShippingStates] = useState(false);\n    const [theBillingStates, setTheBillingStates] = useState([]);\n    const [isFetchingBillingStates, setIsFetchingBillingStates] = useState(false);\n\n    // Get Cart Data.\n    const {data} = useQuery(GET_CART, {\n        notifyOnNetworkStatusChange: true,\n        onCompleted: () => {\n            // Update cart in the localStorage.\n            const updatedCart = getFormattedCart(data);\n            localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart));\n\n            // Update cart data in React Context.\n            setCart(updatedCart);\n        }\n    });\n\n    // Create New order: Checkout Mutation.\n    const [checkout, {\n        data: checkoutResponse,\n        loading: checkoutLoading,\n    }] = useMutation(CHECKOUT_MUTATION, {\n        variables: {\n            input: orderData\n        },\n        onError: (error) => {\n            if (error) {\n                setRequestError(error?.graphQLErrors?.[0]?.message ?? '');\n            }\n        }\n    });\n\n    /*\n     * Handle form submit.\n     *\n     * @param {Object} event Event Object.\n     *\n     * @return {void}\n     */\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        /**\n         * Validate Billing and Shipping Details\n         *\n         * Note:\n         * 1. If billing is different than shipping address, only then validate billing.\n         * 2. We are passing theBillingStates?.length and theShippingStates?.length, so that\n         * the respective states should only be mandatory, if a country has states.\n         */\n        const billingValidationResult = input?.billingDifferentThanShipping ? validateAndSanitizeCheckoutForm(input?.billing, theBillingStates?.length) : {errors: null, isValid: true};\n        const shippingValidationResult = validateAndSanitizeCheckoutForm(input?.shipping, theShippingStates?.length);\n\n        if (!shippingValidationResult.isValid || !billingValidationResult.isValid) {\n            setInput({\n                ...input,\n                billing: {...input.billing, errors: billingValidationResult.errors},\n                shipping: {...input.shipping, errors: shippingValidationResult.errors}\n            });\n\n            return;\n        }\n\n        const checkOutData = createCheckoutData(input);\n        setRequestError(null);\n        /**\n         *  When order data is set, checkout mutation will automatically be called,\n         *  because 'orderData' is added in useEffect as a dependency.\n         */\n        setOrderData(checkOutData);\n    };\n\n    /*\n     * Handle onchange input.\n     *\n     * @param {Object} event Event Object.\n     * @param {bool} isShipping If this is false it means it is billing.\n     * @param {bool} isBillingOrShipping If this is false means its standard input and not billing or shipping.\n     *\n     * @return {void}\n     */\n    const handleOnChange = async (event, isShipping = false, isBillingOrShipping = false) => {\n\n        const {target} = event || {};\n\n        if ('createAccount' === target.name) {\n            handleCreateAccount(input, setInput, target)\n        } else if ('billingDifferentThanShipping' === target.name) {\n            handleBillingDifferentThanShipping(input, setInput, target);\n        } else if (isBillingOrShipping) {\n            if (isShipping) {\n                await handleShippingChange(target)\n            } else {\n                await handleBillingChange(target)\n            }\n        } else {\n            const newState = {...input, [target.name]: target.value};\n            setInput(newState);\n        }\n    };\n\n    const handleShippingChange = async (target) => {\n        const newState = {...input, shipping: {...input?.shipping, [target.name]: target.value}};\n        setInput(newState);\n        await setStatesForCountry(target, setTheShippingStates, setIsFetchingShippingStates);\n    }\n\n    const handleBillingChange = async (target) => {\n        const newState = {...input, billing: {...input?.billing, [target.name]: target.value}};\n        setInput(newState);\n        await setStatesForCountry(target, setTheBillingStates, setIsFetchingBillingStates);\n    }\n\n    useEffect(async () => {\n\n        if (null !== orderData) {\n            // Call the checkout mutation when the value for orderData changes/updates.\n            await checkout();\n        }\n\n    }, [orderData]);\n\n    return (\n        <>\n            {cart ? (\n                <form onSubmit={handleFormSubmit} className=\"woo-next-checkout-form\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-20\">\n                        <div>\n                            {/*Shipping Details*/}\n                            <div className=\"billing-details\">\n                                <h2 className=\"text-xl font-medium mb-4\">Shipping Details</h2>\n                                <Address\n                                    states={theShippingStates}\n                                    countries={shippingCountries}\n                                    input={input?.shipping}\n                                    handleOnChange={(event) => handleOnChange(event, true, true)}\n                                    isFetchingStates={isFetchingShippingStates}\n                                    isShipping\n                                    isBillingOrShipping\n                                />\n                            </div>\n                            <div>\n                                <CheckboxField\n                                    name=\"billingDifferentThanShipping\"\n                                    type=\"checkbox\"\n                                    checked={input?.billingDifferentThanShipping}\n                                    handleOnChange={handleOnChange}\n                                    label=\"Billing different than shipping\"\n                                    containerClassNames=\"mb-4 pt-4\"\n                                />\n                            </div>\n                            {/*Billing Details*/}\n                            {input?.billingDifferentThanShipping ? (\n                                <div className=\"billing-details\">\n                                    <h2 className=\"text-xl font-medium mb-4\">Billing Details</h2>\n                                    <Address\n                                        states={theBillingStates}\n                                        countries={billingCountries}\n                                        input={input?.billing}\n                                        handleOnChange={(event) => handleOnChange(event, false, true)}\n                                        isFetchingStates={isFetchingBillingStates}\n                                        isShipping={false}\n                                        isBillingOrShipping\n                                    />\n                                </div>\n                            ) : null}\n\n                        </div>\n                        {/* Order & Payments*/}\n                        <div className=\"your-orders\">\n                            {/*\tOrder*/}\n                            <h2 className=\"text-xl font-medium mb-4\">Your Order</h2>\n                            <YourOrder cart={cart}/>\n\n                            {/*Payment*/}\n                            <PaymentModes input={input} handleOnChange={handleOnChange}/>\n                            <div className=\"woo-next-place-order-btn-wrap mt-5\">\n                                <button className=\"bg-purple-600 text-white px-5 py-3 rounded-sm w-auto xl:w-full\"\n                                        type=\"submit\">\n                                    Place Order\n                                </button>\n                            </div>\n\n                            {/* Checkout Loading*/}\n                            {checkoutLoading && <p>Processing Order...</p>}\n                            {requestError && <p>Error : {requestError} :( Please try again</p>}\n                        </div>\n                    </div>\n                </form>\n            ) : ''}\n\n            {/*\tShow message if Order Success*/}\n            <OrderSuccess response={checkoutResponse}/>\n        </>\n    );\n};\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}