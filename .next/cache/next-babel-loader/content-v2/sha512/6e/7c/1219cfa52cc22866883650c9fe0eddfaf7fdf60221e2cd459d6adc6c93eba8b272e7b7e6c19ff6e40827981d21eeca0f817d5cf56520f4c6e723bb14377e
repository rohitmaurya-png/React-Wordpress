{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ruturaj\\\\Downloads\\\\wordpress react\\\\src\\\\components\\\\cart\\\\AddToCartButton.js\";\nimport { useState, useContext } from \"react\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport Link from \"next/link\";\nimport { v4 } from 'uuid';\nimport cx from 'classnames';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart } from \"../../functions\";\nimport GET_CART from \"../../queries/get-cart\";\nimport ADD_TO_CART from \"../../mutations/add-to-cart\";\n\nconst AddToCart = props => {\n  var _product$externalUrl;\n\n  const {\n    product\n  } = props;\n  const productQryInput = {\n    clientMutationId: v4(),\n    // Generate a unique id.\n    productId: product.productId\n  };\n  const {\n    0: cart,\n    1: setCart\n  } = useContext(AppContext);\n  const {\n    0: showViewCart,\n    1: setShowViewCart\n  } = useState(false);\n  const {\n    0: requestError,\n    1: setRequestError\n  } = useState(null); // Get Cart Data.\n\n  const {\n    data,\n    refetch\n  } = useQuery(GET_CART, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: () => {\n      // Update cart in the localStorage.\n      const updatedCart = getFormattedCart(data);\n      localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart)); // Update cart data in React Context.\n\n      setCart(updatedCart);\n    }\n  }); // Add to Cart Mutation.\n\n  const [addToCart, {\n    data: addToCartRes,\n    loading: addToCartLoading,\n    error: addToCartError\n  }] = useMutation(ADD_TO_CART, {\n    variables: {\n      input: productQryInput\n    },\n    onCompleted: () => {\n      // On Success:\n      // 1. Make the GET_CART query to update the cart with new values in React context.\n      refetch(); // 2. Show View Cart Button\n\n      setShowViewCart(true);\n    },\n    onError: error => {\n      if (error) {\n        var _error$graphQLErrors$, _error$graphQLErrors, _error$graphQLErrors$2;\n\n        setRequestError((_error$graphQLErrors$ = error === null || error === void 0 ? void 0 : (_error$graphQLErrors = error.graphQLErrors) === null || _error$graphQLErrors === void 0 ? void 0 : (_error$graphQLErrors$2 = _error$graphQLErrors[0]) === null || _error$graphQLErrors$2 === void 0 ? void 0 : _error$graphQLErrors$2.message) !== null && _error$graphQLErrors$ !== void 0 ? _error$graphQLErrors$ : '');\n      }\n    }\n  });\n\n  const handleAddToCartClick = async () => {\n    setRequestError(null);\n    await addToCart();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"ExternalProduct\" === product.__typename ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: (_product$externalUrl = product === null || product === void 0 ? void 0 : product.externalUrl) !== null && _product$externalUrl !== void 0 ? _product$externalUrl : '/',\n      target: \"_blank\",\n      className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n      children: \"Buy now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: addToCartLoading,\n      onClick: handleAddToCartClick,\n      className: cx('px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current', {\n        'hover:bg-purple-600 hover:text-white hover:border-purple-600': !addToCartLoading\n      }, {\n        'opacity-50 cursor-not-allowed': addToCartLoading\n      }),\n      children: addToCartLoading ? 'Adding to cart...' : 'Add to cart'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), showViewCart ? /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/cart\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n        children: \"View Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AddToCart;","map":{"version":3,"sources":["C:/Users/Ruturaj/Downloads/wordpress react/src/components/cart/AddToCartButton.js"],"names":["useState","useContext","useQuery","useMutation","Link","v4","cx","AppContext","getFormattedCart","GET_CART","ADD_TO_CART","AddToCart","props","product","productQryInput","clientMutationId","productId","cart","setCart","showViewCart","setShowViewCart","requestError","setRequestError","data","refetch","notifyOnNetworkStatusChange","onCompleted","updatedCart","localStorage","setItem","JSON","stringify","addToCart","addToCartRes","loading","addToCartLoading","error","addToCartError","variables","input","onError","graphQLErrors","message","handleAddToCartClick","__typename","externalUrl"],"mappings":"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","sourcesContent":["import {useState, useContext} from \"react\";\nimport {useQuery, useMutation} from '@apollo/client';\nimport Link from \"next/link\";\nimport {v4} from 'uuid';\nimport cx from 'classnames';\n\nimport {AppContext} from \"../context/AppContext\";\nimport {getFormattedCart} from \"../../functions\";\nimport GET_CART from \"../../queries/get-cart\";\nimport ADD_TO_CART from \"../../mutations/add-to-cart\";\n\nconst AddToCart = (props) => {\n\n    const {product} = props;\n\n    const productQryInput = {\n        clientMutationId: v4(), // Generate a unique id.\n        productId: product.productId,\n    };\n\n    const [cart, setCart] = useContext(AppContext);\n    const [showViewCart, setShowViewCart] = useState(false);\n    const [requestError, setRequestError] = useState(null);\n\n        // Get Cart Data.\n    const {data, refetch} = useQuery(GET_CART, {\n            notifyOnNetworkStatusChange: true,\n            onCompleted: () => {\n\n                // Update cart in the localStorage.\n                const updatedCart = getFormattedCart(data);\n                localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart));\n\n                // Update cart data in React Context.\n                setCart(updatedCart);\n            }\n        });\n\n    // Add to Cart Mutation.\n    const [addToCart, {\n        data: addToCartRes,\n        loading: addToCartLoading,\n        error: addToCartError\n    }] = useMutation(ADD_TO_CART, {\n        variables: {\n            input: productQryInput,\n        },\n        onCompleted: () => {\n            // On Success:\n            // 1. Make the GET_CART query to update the cart with new values in React context.\n            refetch();\n\n            // 2. Show View Cart Button\n            setShowViewCart(true)\n        },\n        onError: (error) => {\n            if (error) {\n                setRequestError(error?.graphQLErrors?.[0]?.message ?? '');\n            }\n        }\n    });\n\n    const handleAddToCartClick = async () => {\n        setRequestError(null);\n        await addToCart();\n    };\n\n    return (\n        <div>\n            {/*\tCheck if its an external product then put its external buy link */}\n            {\"ExternalProduct\" === product.__typename ? (\n                    <a href={product?.externalUrl ?? '/'} target=\"_blank\"\n                       className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">\n\t\t\t\t\t\tBuy now\n                    </a>\n                ) :\n                <button\n\t\t\t\t\tdisabled={addToCartLoading}\n                    onClick={handleAddToCartClick}\n                    className={cx(\n                        'px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current',\n                        {'hover:bg-purple-600 hover:text-white hover:border-purple-600': !addToCartLoading},\n                        {'opacity-50 cursor-not-allowed': addToCartLoading}\n                    )}\n                >\n\t\t\t\t\t{ addToCartLoading ? 'Adding to cart...' : 'Add to cart' }\n                </button>\n            }\n            {showViewCart ? (\n                <Link href=\"/cart\">\n                    <button\n                        className=\"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">View\n                        Cart\n                    </button>\n                </Link>\n            ) : ''}\n        </div>\n    );\n};\n\nexport default AddToCart;\n"]},"metadata":{},"sourceType":"module"}