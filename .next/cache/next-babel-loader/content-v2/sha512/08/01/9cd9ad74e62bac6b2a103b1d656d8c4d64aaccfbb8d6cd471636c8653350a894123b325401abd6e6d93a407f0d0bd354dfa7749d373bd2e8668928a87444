{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Ruturaj/Downloads/wordpress react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Ruturaj/Downloads/wordpress react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Ruturaj/Downloads/wordpress react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:/Users/Ruturaj/Downloads/wordpress react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ruturaj\\\\Downloads\\\\wordpress react\\\\src\\\\components\\\\checkout\\\\CheckoutForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useContext, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport YourOrder from \"./YourOrder\";\nimport PaymentModes from \"./PaymentModes\";\nimport { AppContext } from \"../context/AppContext\";\nimport validateAndSanitizeCheckoutForm from '../../validator/checkout';\nimport { getFormattedCart, createCheckoutData } from \"../../functions\";\nimport OrderSuccess from \"./OrderSuccess\";\nimport GET_CART from \"../../queries/get-cart\";\nimport CHECKOUT_MUTATION from \"../../mutations/checkout\";\nimport Address from \"./Address\";\nimport { handleBillingDifferentThanShipping, handleCreateAccount, setStatesForCountry } from \"../../utils/checkout\";\nimport CheckboxField from \"./form-elements/CheckboxField\"; // Use this for testing purposes, so you dont have to fill the checkout form over an over again.\n// const defaultCustomerInfo = {\n// \tfirstName: 'Imran',\n// \tlastName: 'Sayed',\n// \taddress1: '123 Abc farm',\n// \taddress2: 'Hill Road',\n// \tcity: 'Mumbai',\n// \tcountry: 'IN',\n// \tstate: 'Maharastra',\n// \tpostcode: '221029',\n// \temail: 'codeytek.academy@gmail.com',\n// \tphone: '9883778278',\n// \tcompany: 'The Company',\n// \terrors: null\n// }\n\nvar defaultCustomerInfo = {\n  firstName: '',\n  lastName: '',\n  address1: '',\n  address2: '',\n  city: '',\n  country: '',\n  state: '',\n  postcode: '',\n  email: '',\n  phone: '',\n  company: '',\n  errors: null\n};\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  _s();\n\n  var countriesData = _ref.countriesData;\n\n  var _ref2 = countriesData || {},\n      billingCountries = _ref2.billingCountries,\n      shippingCountries = _ref2.shippingCountries;\n\n  var initialState = {\n    billing: _objectSpread({}, defaultCustomerInfo),\n    shipping: _objectSpread({}, defaultCustomerInfo),\n    createAccount: false,\n    orderNotes: '',\n    billingDifferentThanShipping: false,\n    paymentMethod: 'cod'\n  };\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext[0],\n      setCart = _useContext[1];\n\n  var _useState = useState(initialState),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var _useState2 = useState(null),\n      orderData = _useState2[0],\n      setOrderData = _useState2[1];\n\n  var _useState3 = useState(null),\n      requestError = _useState3[0],\n      setRequestError = _useState3[1];\n\n  var _useState4 = useState([]),\n      theShippingStates = _useState4[0],\n      setTheShippingStates = _useState4[1];\n\n  var _useState5 = useState(false),\n      isFetchingShippingStates = _useState5[0],\n      setIsFetchingShippingStates = _useState5[1];\n\n  var _useState6 = useState([]),\n      theBillingStates = _useState6[0],\n      setTheBillingStates = _useState6[1];\n\n  var _useState7 = useState(false),\n      isFetchingBillingStates = _useState7[0],\n      setIsFetchingBillingStates = _useState7[1]; // Get Cart Data.\n\n\n  var _useQuery = useQuery(GET_CART, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: function onCompleted() {\n      // Update cart in the localStorage.\n      var updatedCart = getFormattedCart(data);\n      localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart)); // Update cart data in React Context.\n\n      setCart(updatedCart);\n    }\n  }),\n      data = _useQuery.data; // Create New order: Checkout Mutation.\n\n\n  var _useMutation = useMutation(CHECKOUT_MUTATION, {\n    variables: {\n      input: orderData\n    },\n    onError: function onError(error) {\n      if (error) {\n        var _error$graphQLErrors$, _error$graphQLErrors, _error$graphQLErrors$2;\n\n        setRequestError((_error$graphQLErrors$ = error === null || error === void 0 ? void 0 : (_error$graphQLErrors = error.graphQLErrors) === null || _error$graphQLErrors === void 0 ? void 0 : (_error$graphQLErrors$2 = _error$graphQLErrors[0]) === null || _error$graphQLErrors$2 === void 0 ? void 0 : _error$graphQLErrors$2.message) !== null && _error$graphQLErrors$ !== void 0 ? _error$graphQLErrors$ : '');\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      checkoutResponse = _useMutation2$.data,\n      checkoutLoading = _useMutation2$.loading;\n  /*\n   * Handle form submit.\n   *\n   * @param {Object} event Event Object.\n   *\n   * @return {void}\n   */\n\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    event.preventDefault();\n    /**\n     * Validate Billing and Shipping Details\n     *\n     * Note:\n     * 1. If billing is different than shipping address, only then validate billing.\n     * 2. We are passing theBillingStates?.length and theShippingStates?.length, so that\n     * the respective states should only be mandatory, if a country has states.\n     */\n\n    var billingValidationResult = input !== null && input !== void 0 && input.billingDifferentThanShipping ? validateAndSanitizeCheckoutForm(input === null || input === void 0 ? void 0 : input.billing, theBillingStates === null || theBillingStates === void 0 ? void 0 : theBillingStates.length) : {\n      errors: null,\n      isValid: true\n    };\n    var shippingValidationResult = validateAndSanitizeCheckoutForm(input === null || input === void 0 ? void 0 : input.shipping, theShippingStates === null || theShippingStates === void 0 ? void 0 : theShippingStates.length);\n\n    if (!shippingValidationResult.isValid || !billingValidationResult.isValid) {\n      setInput(_objectSpread(_objectSpread({}, input), {}, {\n        billing: _objectSpread(_objectSpread({}, input.billing), {}, {\n          errors: billingValidationResult.errors\n        }),\n        shipping: _objectSpread(_objectSpread({}, input.shipping), {}, {\n          errors: shippingValidationResult.errors\n        })\n      }));\n      return;\n    }\n\n    var checkOutData = createCheckoutData(input);\n    setRequestError(null);\n    /**\n     *  When order data is set, checkout mutation will automatically be called,\n     *  because 'orderData' is added in useEffect as a dependency.\n     */\n\n    setOrderData(checkOutData);\n  };\n  /*\n   * Handle onchange input.\n   *\n   * @param {Object} event Event Object.\n   * @param {bool} isShipping If this is false it means it is billing.\n   * @param {bool} isBillingOrShipping If this is false means its standard input and not billing or shipping.\n   *\n   * @return {void}\n   */\n\n\n  var _handleOnChange = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var isShipping,\n          isBillingOrShipping,\n          _ref4,\n          target,\n          newState,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isShipping = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n              isBillingOrShipping = _args.length > 2 && _args[2] !== undefined ? _args[2] : false;\n              _ref4 = event || {}, target = _ref4.target;\n\n              if (!('createAccount' === target.name)) {\n                _context.next = 7;\n                break;\n              }\n\n              handleCreateAccount(input, setInput, target);\n              _context.next = 23;\n              break;\n\n            case 7:\n              if (!('billingDifferentThanShipping' === target.name)) {\n                _context.next = 11;\n                break;\n              }\n\n              handleBillingDifferentThanShipping(input, setInput, target);\n              _context.next = 23;\n              break;\n\n            case 11:\n              if (!isBillingOrShipping) {\n                _context.next = 21;\n                break;\n              }\n\n              if (!isShipping) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 15;\n              return handleShippingChange(target);\n\n            case 15:\n              _context.next = 19;\n              break;\n\n            case 17:\n              _context.next = 19;\n              return handleBillingChange(target);\n\n            case 19:\n              _context.next = 23;\n              break;\n\n            case 21:\n              newState = _objectSpread(_objectSpread({}, input), {}, _defineProperty({}, target.name, target.value));\n              setInput(newState);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleOnChange(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleShippingChange = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(target) {\n      var newState;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newState = _objectSpread(_objectSpread({}, input), {}, {\n                shipping: _objectSpread(_objectSpread({}, input === null || input === void 0 ? void 0 : input.shipping), {}, _defineProperty({}, target.name, target.value))\n              });\n              setInput(newState);\n              _context2.next = 4;\n              return setStatesForCountry(target, setTheShippingStates, setIsFetchingShippingStates);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleShippingChange(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleBillingChange = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(target) {\n      var newState;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              newState = _objectSpread(_objectSpread({}, input), {}, {\n                billing: _objectSpread(_objectSpread({}, input === null || input === void 0 ? void 0 : input.billing), {}, _defineProperty({}, target.name, target.value))\n              });\n              setInput(newState);\n              _context3.next = 4;\n              return setStatesForCountry(target, setTheBillingStates, setIsFetchingBillingStates);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleBillingChange(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(null !== orderData)) {\n              _context4.next = 3;\n              break;\n            }\n\n            _context4.next = 3;\n            return checkout();\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  })), [orderData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cart ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"woo-next-checkout-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"billing-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-medium mb-4\",\n              children: \"Shipping Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(Address, {\n              states: theShippingStates,\n              countries: shippingCountries,\n              input: input === null || input === void 0 ? void 0 : input.shipping,\n              handleOnChange: function handleOnChange(event) {\n                return _handleOnChange(event, true, true);\n              },\n              isFetchingStates: isFetchingShippingStates,\n              isShipping: true,\n              isBillingOrShipping: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CheckboxField, {\n              name: \"billingDifferentThanShipping\",\n              type: \"checkbox\",\n              checked: input === null || input === void 0 ? void 0 : input.billingDifferentThanShipping,\n              handleOnChange: _handleOnChange,\n              label: \"Billing different than shipping\",\n              containerClassNames: \"mb-4 pt-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, _this), input !== null && input !== void 0 && input.billingDifferentThanShipping ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"billing-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-medium mb-4\",\n              children: \"Billing Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 37\n            }, _this), /*#__PURE__*/_jsxDEV(Address, {\n              states: theBillingStates,\n              countries: billingCountries,\n              input: input === null || input === void 0 ? void 0 : input.billing,\n              handleOnChange: function handleOnChange(event) {\n                return _handleOnChange(event, false, true);\n              },\n              isFetchingStates: isFetchingBillingStates,\n              isShipping: false,\n              isBillingOrShipping: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, _this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"your-orders\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-medium mb-4\",\n            children: \"Your Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(YourOrder, {\n            cart: cart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(PaymentModes, {\n            input: input,\n            handleOnChange: _handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"woo-next-place-order-btn-wrap mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-purple-600 text-white px-5 py-3 rounded-sm w-auto xl:w-full\",\n              type: \"submit\",\n              children: \"Place Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, _this), checkoutLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Processing Order...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 49\n          }, _this), requestError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error : \", requestError, \" :( Please try again\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 46\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, _this) : '', /*#__PURE__*/_jsxDEV(OrderSuccess, {\n      response: checkoutResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(CheckoutForm, \"qITV6QgHyuJVihkqM03f6iiueZc=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["C:/Users/Ruturaj/Downloads/wordpress react/src/components/checkout/CheckoutForm.js"],"names":["useState","useContext","useEffect","useMutation","useQuery","YourOrder","PaymentModes","AppContext","validateAndSanitizeCheckoutForm","getFormattedCart","createCheckoutData","OrderSuccess","GET_CART","CHECKOUT_MUTATION","Address","handleBillingDifferentThanShipping","handleCreateAccount","setStatesForCountry","CheckboxField","defaultCustomerInfo","firstName","lastName","address1","address2","city","country","state","postcode","email","phone","company","errors","CheckoutForm","countriesData","billingCountries","shippingCountries","initialState","billing","shipping","createAccount","orderNotes","billingDifferentThanShipping","paymentMethod","cart","setCart","input","setInput","orderData","setOrderData","requestError","setRequestError","theShippingStates","setTheShippingStates","isFetchingShippingStates","setIsFetchingShippingStates","theBillingStates","setTheBillingStates","isFetchingBillingStates","setIsFetchingBillingStates","notifyOnNetworkStatusChange","onCompleted","updatedCart","data","localStorage","setItem","JSON","stringify","variables","onError","error","graphQLErrors","message","checkout","checkoutResponse","checkoutLoading","loading","handleFormSubmit","event","preventDefault","billingValidationResult","length","isValid","shippingValidationResult","checkOutData","handleOnChange","isShipping","isBillingOrShipping","target","name","handleShippingChange","handleBillingChange","newState","value"],"mappings":"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","sourcesContent":["import {useState, useContext, useEffect} from 'react';\nimport {useMutation, useQuery} from '@apollo/client';\n\nimport YourOrder from \"./YourOrder\";\nimport PaymentModes from \"./PaymentModes\";\nimport {AppContext} from \"../context/AppContext\";\nimport validateAndSanitizeCheckoutForm from '../../validator/checkout';\nimport {getFormattedCart, createCheckoutData} from \"../../functions\";\nimport OrderSuccess from \"./OrderSuccess\";\nimport GET_CART from \"../../queries/get-cart\";\nimport CHECKOUT_MUTATION from \"../../mutations/checkout\";\nimport Address from \"./Address\";\nimport {\n    handleBillingDifferentThanShipping,\n    handleCreateAccount,\n    setStatesForCountry\n} from \"../../utils/checkout\";\nimport CheckboxField from \"./form-elements/CheckboxField\";\n\n// Use this for testing purposes, so you dont have to fill the checkout form over an over again.\n// const defaultCustomerInfo = {\n// \tfirstName: 'Imran',\n// \tlastName: 'Sayed',\n// \taddress1: '123 Abc farm',\n// \taddress2: 'Hill Road',\n// \tcity: 'Mumbai',\n// \tcountry: 'IN',\n// \tstate: 'Maharastra',\n// \tpostcode: '221029',\n// \temail: 'codeytek.academy@gmail.com',\n// \tphone: '9883778278',\n// \tcompany: 'The Company',\n// \terrors: null\n// }\n\nconst defaultCustomerInfo = {\n    firstName: '',\n    lastName: '',\n    address1: '',\n    address2: '',\n    city: '',\n    country: '',\n    state: '',\n    postcode: '',\n    email: '',\n    phone: '',\n    company: '',\n    errors: null\n}\n\nconst CheckoutForm = ({countriesData}) => {\n\n    const {billingCountries, shippingCountries} = countriesData || {}\n\n    const initialState = {\n        billing: {\n            ...defaultCustomerInfo,\n        },\n        shipping: {\n            ...defaultCustomerInfo\n        },\n        createAccount: false,\n        orderNotes: '',\n        billingDifferentThanShipping: false,\n        paymentMethod: 'cod',\n    };\n\n    const [cart, setCart] = useContext(AppContext);\n    const [input, setInput] = useState(initialState);\n    const [orderData, setOrderData] = useState(null);\n    const [requestError, setRequestError] = useState(null);\n    const [theShippingStates, setTheShippingStates] = useState([]);\n    const [isFetchingShippingStates, setIsFetchingShippingStates] = useState(false);\n    const [theBillingStates, setTheBillingStates] = useState([]);\n    const [isFetchingBillingStates, setIsFetchingBillingStates] = useState(false);\n\n    // Get Cart Data.\n    const {data} = useQuery(GET_CART, {\n        notifyOnNetworkStatusChange: true,\n        onCompleted: () => {\n            // Update cart in the localStorage.\n            const updatedCart = getFormattedCart(data);\n            localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart));\n\n            // Update cart data in React Context.\n            setCart(updatedCart);\n        }\n    });\n\n    // Create New order: Checkout Mutation.\n    const [checkout, {\n        data: checkoutResponse,\n        loading: checkoutLoading,\n    }] = useMutation(CHECKOUT_MUTATION, {\n        variables: {\n            input: orderData\n        },\n        onError: (error) => {\n            if (error) {\n                setRequestError(error?.graphQLErrors?.[0]?.message ?? '');\n            }\n        }\n    });\n\n    /*\n     * Handle form submit.\n     *\n     * @param {Object} event Event Object.\n     *\n     * @return {void}\n     */\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        /**\n         * Validate Billing and Shipping Details\n         *\n         * Note:\n         * 1. If billing is different than shipping address, only then validate billing.\n         * 2. We are passing theBillingStates?.length and theShippingStates?.length, so that\n         * the respective states should only be mandatory, if a country has states.\n         */\n        const billingValidationResult = input?.billingDifferentThanShipping ? validateAndSanitizeCheckoutForm(input?.billing, theBillingStates?.length) : {errors: null, isValid: true};\n        const shippingValidationResult = validateAndSanitizeCheckoutForm(input?.shipping, theShippingStates?.length);\n\n        if (!shippingValidationResult.isValid || !billingValidationResult.isValid) {\n            setInput({\n                ...input,\n                billing: {...input.billing, errors: billingValidationResult.errors},\n                shipping: {...input.shipping, errors: shippingValidationResult.errors}\n            });\n\n            return;\n        }\n\n        const checkOutData = createCheckoutData(input);\n        setRequestError(null);\n        /**\n         *  When order data is set, checkout mutation will automatically be called,\n         *  because 'orderData' is added in useEffect as a dependency.\n         */\n        setOrderData(checkOutData);\n    };\n\n    /*\n     * Handle onchange input.\n     *\n     * @param {Object} event Event Object.\n     * @param {bool} isShipping If this is false it means it is billing.\n     * @param {bool} isBillingOrShipping If this is false means its standard input and not billing or shipping.\n     *\n     * @return {void}\n     */\n    const handleOnChange = async (event, isShipping = false, isBillingOrShipping = false) => {\n\n        const {target} = event || {};\n\n        if ('createAccount' === target.name) {\n            handleCreateAccount(input, setInput, target)\n        } else if ('billingDifferentThanShipping' === target.name) {\n            handleBillingDifferentThanShipping(input, setInput, target);\n        } else if (isBillingOrShipping) {\n            if (isShipping) {\n                await handleShippingChange(target)\n            } else {\n                await handleBillingChange(target)\n            }\n        } else {\n            const newState = {...input, [target.name]: target.value};\n            setInput(newState);\n        }\n    };\n\n    const handleShippingChange = async (target) => {\n        const newState = {...input, shipping: {...input?.shipping, [target.name]: target.value}};\n        setInput(newState);\n        await setStatesForCountry(target, setTheShippingStates, setIsFetchingShippingStates);\n    }\n\n    const handleBillingChange = async (target) => {\n        const newState = {...input, billing: {...input?.billing, [target.name]: target.value}};\n        setInput(newState);\n        await setStatesForCountry(target, setTheBillingStates, setIsFetchingBillingStates);\n    }\n\n    useEffect(async () => {\n\n        if (null !== orderData) {\n            // Call the checkout mutation when the value for orderData changes/updates.\n            await checkout();\n        }\n\n    }, [orderData]);\n\n    return (\n        <>\n            {cart ? (\n                <form onSubmit={handleFormSubmit} className=\"woo-next-checkout-form\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-20\">\n                        <div>\n                            {/*Shipping Details*/}\n                            <div className=\"billing-details\">\n                                <h2 className=\"text-xl font-medium mb-4\">Shipping Details</h2>\n                                <Address\n                                    states={theShippingStates}\n                                    countries={shippingCountries}\n                                    input={input?.shipping}\n                                    handleOnChange={(event) => handleOnChange(event, true, true)}\n                                    isFetchingStates={isFetchingShippingStates}\n                                    isShipping\n                                    isBillingOrShipping\n                                />\n                            </div>\n                            <div>\n                                <CheckboxField\n                                    name=\"billingDifferentThanShipping\"\n                                    type=\"checkbox\"\n                                    checked={input?.billingDifferentThanShipping}\n                                    handleOnChange={handleOnChange}\n                                    label=\"Billing different than shipping\"\n                                    containerClassNames=\"mb-4 pt-4\"\n                                />\n                            </div>\n                            {/*Billing Details*/}\n                            {input?.billingDifferentThanShipping ? (\n                                <div className=\"billing-details\">\n                                    <h2 className=\"text-xl font-medium mb-4\">Billing Details</h2>\n                                    <Address\n                                        states={theBillingStates}\n                                        countries={billingCountries}\n                                        input={input?.billing}\n                                        handleOnChange={(event) => handleOnChange(event, false, true)}\n                                        isFetchingStates={isFetchingBillingStates}\n                                        isShipping={false}\n                                        isBillingOrShipping\n                                    />\n                                </div>\n                            ) : null}\n\n                        </div>\n                        {/* Order & Payments*/}\n                        <div className=\"your-orders\">\n                            {/*\tOrder*/}\n                            <h2 className=\"text-xl font-medium mb-4\">Your Order</h2>\n                            <YourOrder cart={cart}/>\n\n                            {/*Payment*/}\n                            <PaymentModes input={input} handleOnChange={handleOnChange}/>\n                            <div className=\"woo-next-place-order-btn-wrap mt-5\">\n                                <button className=\"bg-purple-600 text-white px-5 py-3 rounded-sm w-auto xl:w-full\"\n                                        type=\"submit\">\n                                    Place Order\n                                </button>\n                            </div>\n\n                            {/* Checkout Loading*/}\n                            {checkoutLoading && <p>Processing Order...</p>}\n                            {requestError && <p>Error : {requestError} :( Please try again</p>}\n                        </div>\n                    </div>\n                </form>\n            ) : ''}\n\n            {/*\tShow message if Order Success*/}\n            <OrderSuccess response={checkoutResponse}/>\n        </>\n    );\n};\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}